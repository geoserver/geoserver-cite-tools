<?xml version="1.0" encoding="UTF-8"?>
<ctl:package 
	xmlns:ctl="http://www.occamlab.com/ctl" 
	xmlns:gml="http://www.opengis.net/gml" 
	xmlns:html="http://www.w3.org/1999/xhtml" 	
	xmlns:ogc="http://www.opengis.net/ogc"
	xmlns:ows="http://www.opengis.net/ows/1.1" 
	xmlns:parsers="http://www.occamlab.com/te/parsers"
	xmlns:saxon="http://saxon.sf.net/" 
	xmlns:tep="http://teamengine.sourceforge.net/parsers" 
	xmlns:xi="http://www.w3.org/2001/XInclude" 
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:wmts="http://www.opengis.net/wmts/1.0"
	xmlns:wwwFunctions="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/wwwFunctions.xml"	
>

	<ctl:function name="wwwFunctions:isRESTfulURL">
		<ctl:param name="url">http://some/path</ctl:param>
		<ctl:description>Returns true if there is no query string, false otherwise.</ctl:description>
		<ctl:code>
		<xsl:choose>
			<xsl:when test="contains($url,'?')">
				<xsl:text>false</xsl:text>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>true</xsl:text>
			</xsl:otherwise>
		</xsl:choose>		
		</ctl:code>
	</ctl:function>
		
	<!-- from WMS functions.xml -->
   <ctl:function name="wwwFunctions:to-lowercase">
      <ctl:param name="string">string value</ctl:param>
      <ctl:code>
         <xsl:value-of select="translate($string, 'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')"/>
      </ctl:code>
   </ctl:function>
		
	<!-- from WMS functions.xml -->
	<ctl:function name="wwwFunctions:remove-mime-comment">
		  <ctl:param name="mime">MIME from which to remove comments</ctl:param>
		  <ctl:description>Removes comments (enclosed in parenthesis) from a MIME string</ctl:description>
		  <ctl:code>
			 <xsl:choose>
				<xsl:when test="contains($mime, '(')">
				   <xsl:variable name="before" select="substring-before($mime, '(')"/>
				   <xsl:variable name="after" select="substring-after(substring-after($mime, '('), ')')"/>
				   <xsl:value-of select="concat($before, wwwFunctions:remove-mime-comment($after))"/>
				</xsl:when>
				<xsl:otherwise>
				   <xsl:value-of select="$mime"/>
				</xsl:otherwise>
			 </xsl:choose>
		  </ctl:code>
   </ctl:function>
   
	<!-- from WMS functions.xml -->
   <ctl:function name="wwwFunctions:mime-match">
      <ctl:param name="test-mime">MIME type to test.</ctl:param>
      <ctl:param name="match-mime">MIME type to match.</ctl:param>
      <ctl:return></ctl:return>
      <ctl:description>Determines whether a MIME type matches a normalized MIME type.</ctl:description>
      <ctl:code>
         <xsl:variable name="failures">
            <xsl:variable name="test-string" select="concat(wwwFunctions:remove-mime-comment($test-mime), ';')"/>
            <xsl:variable name="match-string" select="concat(wwwFunctions:remove-mime-comment($match-mime), ';')"/>
            <xsl:variable name="base-test-mime" select="normalize-space(substring-before($test-string, ';'))"/>
            <xsl:variable name="base-match-mime" select="normalize-space(substring-before($match-string, ';'))"/>
            <xsl:choose>
               <xsl:when test="wwwFunctions:to-lowercase($base-test-mime) = wwwFunctions:to-lowercase($base-match-mime)">
<!--
MIME parameters don't have to match anymore - see issue 24, MIME type test too strict
                  <xsl:variable name="test-params">
                     <xsl:copy-of select="functions:split(substring-after($test-string, ';'), ';')"/>
                  </xsl:variable>
                  <xsl:variable name="match-params">
                     <xsl:copy-of select="functions:split(substring-after($match-string, ';'), ';')"/>
                  </xsl:variable>
                  <xsl:for-each select="$match-params/token[normalize-space(.) != '']">
                     <xsl:variable name="param" select="functions:to-lowercase(normalize-space(.))"/>
                     <xsl:if test="not($test-params/token[functions:to-lowercase(normalize-space(.)) = $param])">
                        <fail/>
                     </xsl:if>
                  </xsl:for-each>
-->
               </xsl:when>
               <xsl:otherwise>
                  <fail/>
               </xsl:otherwise>
            </xsl:choose>
         </xsl:variable>
         <xsl:value-of select="not($failures/fail)"/>
      </ctl:code>
   </ctl:function>

<!-- from WMS functions.xml, extended to include JPEG2000 (image/jp2)  -->
	<ctl:function name="wwwFunctions:image-format">
		  <ctl:param name="format">A format</ctl:param>
		  <ctl:description>Determines whether MIME type format is an image format.</ctl:description>
		  <ctl:code>
				 <xsl:value-of select="boolean(wwwFunctions:mime-match($format, 'image/png') = 'true' or wwwFunctions:mime-match($format, 'image/gif') = 'true' or wwwFunctions:mime-match($format, 'image/jpeg') = 'true' or wwwFunctions:mime-match($format, 'image/jp2') = 'true' ) "/>
		  </ctl:code>
   </ctl:function>

		
</ctl:package>
