<?xml version="1.0" encoding="UTF-8"?>
<ctl:package 
	xmlns:ctl="http://www.occamlab.com/ctl" 
	xmlns:gml="http://www.opengis.net/gml" 
	xmlns:html="http://www.w3.org/1999/xhtml" 	
	xmlns:ogc="http://www.opengis.net/ogc"
	xmlns:ows="http://www.opengis.net/ows/1.1" 
	xmlns:parsers="http://www.occamlab.com/te/parsers"
	xmlns:saxon="http://saxon.sf.net/" 
    xmlns:te="http://www.occamlab.com/te"
	xmlns:tep="http://teamengine.sourceforge.net/parsers" 
	xmlns:xi="http://www.w3.org/2001/XInclude" 
	xmlns:xlink="http://www.w3.org/1999/xlink"
	xmlns:xml="http://www.w3.org/XML/1998/namespace"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:wmts="http://www.opengis.net/wmts/1.0"
	xmlns:ctlFunctions="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/ctlFunctions.xml"	
	xmlns:owsFunctions="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/owsFunctions.xml"	
	xmlns:wwwFunctions="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/wwwFunctions.xml"	
	xmlns:wmtsFunctions="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/wmtsFunctions.xml"	
	xmlns:wmtsBootstrap="https://cite.opengeospatial.org/wmts-1.0.0/src/ctl/bootstrap.xml"
>

<ctl:test name="wmts:Client.KVP.GET.GetFeatureInfo.Mandatory" type="Mandatory">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the client can generate a valid KVP GET GetFeatureInfo request for sample pixels in sample tiles from each Layer with InfoFormats, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, from each TileMatrix from each TileMatrixSet for the Layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid KVP GET GetFeatureInfo requests with mandatory parameters. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.KVP.GET.GetFeatureInfo.Mandatory</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.KVP.GET.GetFeatureInfo.Mandatory not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.KVP.GET.GetFeatureInfo.Mandatory not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.KVP.GET.GetFeatureInfo.Mandatory test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.KVP.GET.GetFeatureInfo.Optional" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid KVP GET GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the request entity is a valid KVP GET GetFeatureInfo request with an optional sample dimensions parameter with a name from a &lt;Dimension&gt;&lt;ows:Identifier&gt; value for the specified Layer from the Service Metadata document;
	17.  the request entity is a valid KVP GET GetFeatureInfo request with an optional sample dimensions parameter with a value from one of the &lt;Dimension&gt;&lt;Value&gt; elements for the specified Dimension from the Service Metadata document.
	18.  the client can generate a valid KVP GET GetFeatureInfo request for sample pixels in sample tiles from each Layer with InfoFormats and sample dimensions, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, for each sample dimension value for each sample dimension for the layer, from each TileMatrix from each TileMatrixSet for the layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid KVP GET GetFeatureInfo requests with mandatory parameters and a supported sample dimensions parameter with a valid value from the range specified in the Service Metadata document. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.KVP.GET.GetFeatureInfo.Optional</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.KVP.GET.GetFeatureInfo.Optional not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.KVP.GET.GetFeatureInfo.Optional not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.KVP.GET.GetFeatureInfo.Optional test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.KVP.POST.GetFeatureInfo.Mandatory"  type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the client can generate a valid KVP POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, from each TileMatrix from each TileMatrixSet for the Layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid KVP POST GetFeatureInfo requests with mandatory parameters.</ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.KVP.POST.GetFeatureInfo.Mandatory</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.KVP.POST.GetFeatureInfo.Mandatory not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.KVP.POST.GetFeatureInfo.Mandatory not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.KVP.POST.GetFeatureInfo.Mandatory test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.KVP.POST.GetFeatureInfo.Optional" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid KVP POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the request entity is a valid KVP POST GetFeatureInfo request with an optional sample dimensions parameter with a name from a &lt;Dimension&gt;&lt;ows:Identifier&gt; value for the specified Layer from the Service Metadata document;
	17.  the request entity is a valid KVP POST GetFeatureInfo request with an optional sample dimensions parameter with a value from one of the &lt;Dimension&gt;&lt;Value&gt; elements for the specified Dimension from the Service Metadata document.
	18.  the client can generate a valid KVP POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats and sample dimensions, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, for each sample dimension value for each sample dimension for the layer, from each TileMatrix from each TileMatrixSet for the layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid KVP POST GetFeatureInfo requests with mandatory parameters and a supported sample dimensions parameter with a valid value from the range specified in the Service Metadata document. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.KVP.POST.GetFeatureInfo.Optional</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.KVP.POST.GetFeatureInfo.Optional not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.KVP.POST.GetFeatureInfo.Optional not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.KVP.POST.GetFeatureInfo.Optional test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.XML.POST.GetFeatureInfo.Mandatory"  type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the client can generate a valid XML POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, from each TileMatrix from each TileMatrixSet for the Layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid XML POST GetFeatureInfo requests with mandatory parameters. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.XML.POST.GetFeatureInfo.Mandatory</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.XML.POST.GetFeatureInfo.Mandatory not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.XML.POST.GetFeatureInfo.Mandatory not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.XML.POST.GetFeatureInfo.Mandatory test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.XML.POST.GetFeatureInfo.Optional" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7. the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid XML POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the request entity is a valid XML POST GetFeatureInfo request with an optional sample dimensions parameter with a name from a &lt;Dimension&gt;&lt;ows:Identifier&gt; value for the specified Layer from the Service Metadata document;
	17.  the request entity is a valid XML POST GetFeatureInfo request with an optional sample dimensions parameter with a value from one of the &lt;Dimension&gt;&lt;Value&gt; elements for the specified Dimension from the Service Metadata document.
	18.  the client can generate a valid XML POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats and sample dimensions, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, for each sample dimension value for each sample dimension for the layer, from each TileMatrix from each TileMatrixSet for the layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid XML POST GetFeatureInfo requests with mandatory parameters and a supported sample dimensions parameter with a valid value from the range specified in the Service Metadata document. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.XML.POST.GetFeatureInfo.Optional</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.XML.POST.GetFeatureInfo.Optional not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.XML.POST.GetFeatureInfo.Optional not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.XML.POST.GetFeatureInfo.Optional test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.SOAP.POST.GetFeatureInfo.Mandatory"  type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid SOAP POST GetFeatureInfo request using SOAP version 1.2 encoding with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the client can generate a valid SOAP POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, from each TileMatrix from each TileMatrixSet for the Layer offered by the server.	</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid SOAP POST GetFeatureInfo requests with mandatory parameters. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.SOAP.POST.GetFeatureInfo.Mandatory</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.SOAP.POST.GetFeatureInfo.Mandatory not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.SOAP.POST.GetFeatureInfo.Mandatory not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.SOAP.POST.GetFeatureInfo.Mandatory test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.SOAP.POST.GetFeatureInfo.Optional" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid SOAP POST GetFeatureInfo request using SOAP version 1.2 encoding with the mandatory request parameter with a value of GetFeatureInfo;
	2.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory service parameter with a value of WMTS;
	3.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Version parameter with a value of 1.0.0;
	4.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Layer parameter with a layer identifier value equal to a &lt;Layer&gt;&lt;ows:Identifier&gt; value from the Service Metadata document;
	5.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Style parameter with a style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document;
	6.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory Format parameter with a MIME type format value equal to a &lt;Layer&gt;&lt;Format&gt; value for the specified Layer from the Service Metadata document;
	7.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileMatrixSet parameter with a TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document;
	8.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileMatrix parameter with a TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document;
	9.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileRow parameter with a TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	10.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory TileCol parameter with a TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	11.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	12.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	13.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory J parameter with a row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	14.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory I parameter with a column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document;
	15.  the request entity is a valid SOAP POST GetFeatureInfo request with the mandatory infoFormat parameter with an InfoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document;
	16.  the request entity is a valid SOAP POST GetFeatureInfo request with an optional sample dimensions parameter with a name from a &lt;Dimension&gt;&lt;ows:Identifier&gt; value for the specified Layer from the Service Metadata document;
	17.  the request entity is a valid SOAP POST GetFeatureInfo request with an optional sample dimensions parameter with a value from one of the &lt;Dimension&gt;&lt;Value&gt; elements for the specified Dimension from the Service Metadata document.
	18.  the client can generate a valid SOAP POST GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats and sample dimensions, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, for each sample dimension value for each sample dimension for the layer, from each TileMatrix from each TileMatrixSet for the layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can issue valid SOAP POST GetFeatureInfo requests with mandatory parameters and a supported sample dimensions parameter with a valid value from the range specified in the Service Metadata document. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.SOAP.POST.GetFeatureInfo.Optional</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.SOAP.POST.GetFeatureInfo.Optional not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.SOAP.POST.GetFeatureInfo.Optional not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.SOAP.POST.GetFeatureInfo.Optional test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.RESTful.GetFeatureInfo.Mandatory" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Layer identifier value provided in the ResourceURL template;
	2.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document substituted in place of the "style" URL template variable;
	3.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Format MIME type format value provided in the ResourceURL template;
	4.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document substituted in place of the "TileMatrixSet" URL template variable;
	5.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document value substituted in place of the "TileMatrix" URL template variable;
	6.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "TileRow" URL template variable;
	7.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "TileCol" URL template variable;
	8.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	9.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	10.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory J row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "J" URL template variable;
	11.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory I column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "I" URL template variable;
	12.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory infoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document substituted in place of the "???Format???InfoFormat???" URL template variable;
	13.  the client can generate a valid RESTful GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, from each TileMatrix from each TileMatrixSet for the Layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can execute a template processor to generate valid RESTful GetFeatureInfo URLs with mandatory information from a ResourceURL provided by the server in a Layer element of the Contents section of the Service Metadata document. </ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.RESTful.GetFeatureInfo.Mandatory</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.RESTful.GetFeatureInfo.Mandatory not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.RESTful.GetFeatureInfo.Mandatory not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.RESTful.GetFeatureInfo.Mandatory test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>

<ctl:test name="wmts:Client.RESTful.GetFeatureInfo.Optional" type="MandatoryIfImplemented">
	<ctl:param name="metPrerequisites">Bootstrap prerequisites test result for this test - true or false</ctl:param>
	<ctl:param name="selected">This test was selected for execution - true or false </ctl:param>
	<ctl:context>wmts:main</ctl:context>
	<ctl:assertion>
	1.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Layer identifier value provided in the ResourceURL template;
	2.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Style identifier value equal to a &lt;Layer&gt;&lt;Style&gt;&lt;owsIdentifier&gt; value for the specified Layer from the Service Metadata document substituted in place of the "style" URL template variable;
	3.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory Format MIME type format value provided in the ResourceURL template;
	4.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileMatrixSet identifier value equal to a &lt;Layer&gt;&lt;TileMatrixSetLink&gt;&lt;TileMatrixSet&gt; value for the specified Layer from the Service Metadata document substituted in place of the "TileMatrixSet" URL template variable;
	5.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileMatrix identifier value equal to a &lt;TileMatrixSet&gt;&lt;TileMatrix&gt;&lt;owsIdentifier&gt; value for the specified TileMatrixSet from the Service Metadata document value substituted in place of the "TileMatrix" URL template variable;
	6.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileRow index value from zero to the value of &lt;MatrixHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "TileRow" URL template variable;
	7.  the request entity is a valid RESTful GetFeatureInfo request URL with the mandatory TileCol index value from zero to the value of &lt;MatrixWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "TileCol" URL template variable;
	8.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileRow index value within the TileMatrixLimits MinTileRow and MaxTileRow values.
	9.  the request entity for info about a tile from a Layer with TileMatrixSetLimits with TileMatrixLimits that references the identifier of the TileMatrix for the tile specifies a TileCol index value within the TileMatrixLimits MinTileCol and MaxTileCol values.
	10.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory J row index value from zero to the value of &lt;TileHeight&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "J" URL template variable;
	11.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory I column index value from zero to the value of &lt;TileWidth&gt; minus 1 for the specified TileMatrix from the Service Metadata document substituted in place of the "I" URL template variable;
	12.  the request entity is a valid RESTful GetFeatureInfo request with the mandatory infoFormat value from one of the &lt;InfoFormat&gt;s for the specified Layer from the Service Metadata document substituted in place of the "???Format???InfoFormat???" URL template variable;
	13.  the request entity is a valid RESTful GetFeatureInfo request with an optional sample dimensions name from a &lt;Dimension&gt;&lt;ows:Identifier&gt; value for the specified Layer from the Service Metadata document substituted in place of the "SampleDimensionName" URL template variable;
	14.  the request entity is a valid RESTful GetFeatureInfo request with an optional sample dimensions value from one of the &lt;Dimension&gt;&lt;Value&gt; elements for the specified Dimension from the Service Metadata document substituted in place of the "SampleDimensionValue" URL template variable;
	15.  the client can generate a valid RESTful GetFeatureInfo request for sample pixels from sample tiles from each Layer with InfoFormats and sample dimensions, in each style for the layer, in each image format for the layer, in each InfoFormat for the Layer, for each sample dimension value for each sample dimension for the layer, from each TileMatrix from each TileMatrixSet for the layer offered by the server.</ctl:assertion>
	<ctl:comment>Test that a WMTS client can parse a Service Metadata document returned from a GetCapabilities request to determine the layers and tiles available, and can execute a template processor to generate valid RESTful GetFeatureInfo URLs with mandatory information from a ResourceURL provided by the server in a Layer element of the Contents section of the Service Metadata document, and a supported sample dimensions parameter with a valid value from the range specified in the Service Metadata document.</ctl:comment>
	<ctl:link>docs/wmts/1.0/WMTS 1.0 ATS.html#Client.RESTful.GetFeatureInfo.Optional</ctl:link>
	<ctl:code>
		<xsl:choose>
			<xsl:when test="$metPrerequisites = 'true' ">
				<xsl:choose>
					<xsl:when test="$selected = 'true' ">
						<ctl:message>Client.RESTful.GetFeatureInfo.Optional not implemented yet</ctl:message>
						<ctl:warning/>
					</xsl:when>
					<xsl:otherwise>
						<ctl:message>Client.RESTful.GetFeatureInfo.Optional not tested.</ctl:message>
						<ctl:notTested/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:when>
			<xsl:otherwise>
				<ctl:message>Client.RESTful.GetFeatureInfo.Optional test skipped because its prerequisites were not met.</ctl:message>
				<ctl:skipped/>
			</xsl:otherwise>
		</xsl:choose>
	</ctl:code>
</ctl:test>


</ctl:package>