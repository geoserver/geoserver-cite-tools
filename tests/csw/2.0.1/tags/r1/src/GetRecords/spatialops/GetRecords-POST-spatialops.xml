<?xml version="1.0" encoding="UTF-8"?>
<ctl:package
 xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
 xmlns:ctl="http://www.occamlab.com/ctl"
 xmlns:parsers="http://www.occamlab.com/te/parsers"
 xmlns:p="http://teamengine.sourceforge.net/parsers"
 xmlns:saxon="http://saxon.sf.net/"
 xmlns:csw="http://www.opengis.net/cat/csw" 
 xmlns:gml="http://www.opengis.net/gml" 
 xmlns:ogc="http://www.opengis.net/ogc"
 xmlns:xi="http://www.w3.org/2001/XInclude">

    <ctl:test name="csw:run-GetRecords-POST-spatialops">
      <ctl:param name="csw.GetCapabilities.document"/>
      <ctl:assertion>Run tests for GetRecords (POST) with spatial operators.</ctl:assertion>
      <ctl:code>
        <xsl:variable name="csw.GetRecords.post.url">
          <xsl:value-of select="$csw.GetCapabilities.document//ows:OperationsMetadata/ows:Operation[@name='GetRecords']/ows:DCP/ows:HTTP/ows:Post/@xlink:href"/>
	    </xsl:variable>
        
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Disjoint']">
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc100.1">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc100.2">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc100.3">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Intersects']">
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc101.1">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc101.2">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc101.3">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Within']">
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc102.1">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc102.2">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Overlaps']">
          <ctl:call-test name="csw:csw-2.0.1-GetRecords-tc103.1">
			<ctl:with-param name="csw.GetRecords.post.url" select="$csw.GetRecords.post.url"/>
		  </ctl:call-test>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Touches']">
          <ctl:message>Touches spatial operator is supported.</ctl:message>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Crosses']">
          <ctl:message>Crosses spatial operator is supported.</ctl:message>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Contains']">
          <ctl:message>Contains spatial operator is supported.</ctl:message>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Beyond']">
          <ctl:message>Beyond spatial operator is supported.</ctl:message>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='DWithin']">
          <ctl:message>DWithin spatial operator is supported.</ctl:message>
        </xsl:if>
        <xsl:if test="$csw.GetCapabilities.document//ogc:Spatial_Capabilities/ogc:SpatialOperators/ogc:SpatialOperator[@name='Equals']">
          <ctl:message>Equals spatial operator is supported.</ctl:message>
        </xsl:if>
      </ctl:code>
    </ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc100.1">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request that includes an ogc:Filter having a
      Disjoint predicate must include only records that are spatially disjoint 
      with respect to the provided geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc100.1.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw" service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:ows="http://www.opengis.net/ows">
      <csw:ElementName>./dc:identifier</csw:ElementName>
      <csw:ElementName>./ows:BoundingBox</csw:ElementName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Disjoint>
            <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
            <gml:LineString srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:posList>48.02 -4.65 49.11 -3.46 49.52 -1.63 50.43 0.58</gml:posList>
            </gml:LineString>										
          </ogc:Disjoint>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 1">
                  <ctl:message>FAILURE: Expected one or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="$response//csw:Record/dc:identifier = 'urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc'">
                  <ctl:message>FAILURE: Unexpected record in response (dc:identifier="urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="$response//csw:Record/dc:identifier = 'urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63'">
                  <ctl:message>FAILURE: Unexpected record in response (dc:identifier="urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc100.2">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request that includes an ogc:Filter having a
      Disjoint predicate must include only records that are spatially disjoint 
      with respect to the provided geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc100.2.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record">
      <csw:ElementSetName>full</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Disjoint>
            <ogc:PropertyName />
            <gml:Envelope srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:lowerCorner>58.0 14.0</gml:lowerCorner>
              <gml:upperCorner>63.0 16.5</gml:upperCorner>
            </gml:Envelope>										
          </ogc:Disjoint>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 2">
                  <ctl:message>FAILURE: Expected two or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="$response//csw:Record/dc:identifier = 'urn:uuid:1ef30a8b-876d-4828-9246-c37ab4510bbd'">
                  <ctl:message>FAILURE: Unexpected record in response (dc:identifier="urn:uuid:1ef30a8b-876d-4828-9246-c37ab4510bbd").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc100.3">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having a spatial predicate that 
      refers to an invalid geometry property must include an exception report.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc100.3.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1">
  <csw:Query typeNames="csw:Record">
      <csw:ElementSetName>summary</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Disjoint>
            <ogc:PropertyName xmlns:dc="http://purl.org/dc/elements/1.1/">dc:coverage</ogc:PropertyName>
            <gml:Envelope srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:lowerCorner>58.0 14.0</gml:lowerCorner>
              <gml:upperCorner>63.0 16.5</gml:upperCorner>
            </gml:Envelope>
          </ogc:Disjoint>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.OWS/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <ctl:call-test name="ctl:SchematronValidatingParser">
		            <ctl:with-param name="doc" select="$response" />
		            <ctl:with-param name="schema">sch/ows/1.0.0/ExceptionReport.sch</ctl:with-param>
		            <ctl:with-param name="phase">NoApplicableCodePhase</ctl:with-param>
	            </ctl:call-test>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc101.1">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter with an
      Intersects predicate must include only records that intersect the given 
      geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc101.1.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw" service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record" 
      xmlns:ows="http://www.opengis.net/ows">
      <csw:ElementSetName>brief</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Intersects>
            <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
            <gml:Point srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:pos>49.0 -3.1</gml:pos>
            </gml:Point>										
          </ogc:Intersects>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 2">
                  <ctl:message>FAILURE: Expected two or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:BriefRecord/dc:identifier = 'urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63')">
                  <ctl:message>FAILURE: Expected csw:BriefRecord having dc:identifier="urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63".</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:BriefRecord/dc:identifier = 'urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc')">
                  <ctl:message>FAILURE: Expected csw:BriefRecord having dc:identifier="urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc".</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc101.2">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter with an
      Intersects predicate must include only records that intersect the given 
      geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc101.2.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record" 
      xmlns:ows="http://www.opengis.net/ows">
      <csw:ElementSetName>summary</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Intersects>
            <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
            <gml:LineString srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:posList>47.43 -1.58 49.02 -2.15 51.10 -3.46 52.62 -4.63</gml:posList>
            </gml:LineString>										
          </ogc:Intersects>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 2">
                  <ctl:message>FAILURE: Expected two or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>1
                <xsl:if test="not($response//csw:SummaryRecord/dc:identifier = 'urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63')">
                  <ctl:message>FAILURE: Expected csw:SummaryRecord having dc:identifier="urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63".</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:SummaryRecord/dc:identifier = 'urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc')">
                  <ctl:message>FAILURE: Expected csw:SummaryRecord having dc:identifier="urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc".</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc101.3">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter with an Intersects 
      predicate must include only records that intersect the given geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc101.3.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record" xmlns:ows="http://www.opengis.net/ows">
      <csw:ElementSetName>full</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Intersects>
            <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
            <gml:LinearRing srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:posList>50.0 0.0 50.0 2.0 52.0 2.0 52.0 0.0 50.0 0.0</gml:posList>
            </gml:LinearRing>
          </ogc:Intersects>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 1">
                  <ctl:message>FAILURE: Expected one or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:Record/dc:identifier = 'urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63')">
                  <ctl:message>FAILURE: Expected record in response (dc:identifier="urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc102.1">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter containing the 
      Within spatial predicate must include only records that lie within the 
      given geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc102.1.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record">
      <csw:ElementSetName>brief</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Within>
            <ogc:PropertyName xmlns:ows="http://www.opengis.net/ows">ows:BoundingBox</ogc:PropertyName>
            <gml:Envelope srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:lowerCorner>60.0 12.0</gml:lowerCorner>
              <gml:upperCorner>70.0 20.0</gml:upperCorner>
            </gml:Envelope>
          </ogc:Within>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 1">
                  <ctl:message>FAILURE: Expected one or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:Record/dc:identifier = 'urn:uuid:1ef30a8b-876d-4828-9246-c37ab4510bbd')">
                  <ctl:message>FAILURE: Missing record (dc:identifier="urn:uuid:1ef30a8b-876d-4828-9246-c37ab4510bbd").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc102.2">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter containing the 
      Within spatial predicate must include only records that lie within the 
      given geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc102.2.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record" xmlns:ows="http://www.opengis.net/ows">
      <csw:ElementSetName>full</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Within>
            <ogc:PropertyName>ows:BoundingBox</ogc:PropertyName>
            <gml:MultiSurface srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:surfaceMember>
                <gml:Polygon>
                  <gml:exterior>
                    <gml:LinearRing>
                      <gml:posList>47.5 -4.0 47.5 1.0 52.0 1.0 52.0 -4.0 47.5 -4.0</gml:posList>
                    </gml:LinearRing>
                  </gml:exterior>
                </gml:Polygon>
              </gml:surfaceMember>
              <gml:surfaceMember>
                <gml:Polygon>
                  <gml:exterior>
                    <gml:LinearRing>
                      <gml:posList>47.5 1.0 47.5 3.5 52.0 3.5 52.0 1.0 47.5 1.0</gml:posList>
                    </gml:LinearRing>
                  </gml:exterior>
                </gml:Polygon>					  
			  </gml:surfaceMember>
            </gml:MultiSurface>										
          </ogc:Within>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 1">
                  <ctl:message>FAILURE: Expected one or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:Record/dc:identifier = 'urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63')">
                  <ctl:message>FAILURE: Missing record (dc:identifier="urn:uuid:94bc9c83-97f6-4b40-9eb8-a8e8787a5c63").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
    
    <ctl:test name="csw:csw-2.0.1-GetRecords-tc103.1">
      <ctl:param name="csw.GetRecords.post.url"/>
      <ctl:assertion>
      The response to a GetRecords request having an ogc:Filter containing the 
      Overlaps spatial predicate must include only records that overlap the 
      given geometry value.
      </ctl:assertion>
	  <ctl:code>
			<xsl:variable name="response">
			  <ctl:request>
				<ctl:url>
					<xsl:value-of select="$csw.GetRecords.post.url"/>
				</ctl:url>
                <ctl:method>POST</ctl:method>
				<ctl:body>
                    <!--<xi:include href="csw-2.0.1-GetRecords-tc103.1.body.xml"/>-->
 <csw:GetRecords xmlns:csw="http://www.opengis.net/cat/csw"
  service="CSW" version="2.0.1" resultType="results">
  <csw:Query typeNames="csw:Record">
      <csw:ElementSetName>summary</csw:ElementSetName>
      <csw:Constraint version="1.1.0">
        <ogc:Filter xmlns:ogc="http://www.opengis.net/ogc" xmlns:gml="http://www.opengis.net/gml">
          <ogc:Overlaps>
            <ogc:PropertyName xmlns:ows="http://www.opengis.net/ows">ows:BoundingBox</ogc:PropertyName>
            <gml:Envelope srsName="urn:x-ogc:def:crs:EPSG:6.11.2:4326">
              <gml:lowerCorner>40.0 -8.0</gml:lowerCorner>
              <gml:upperCorner>46.0 0.0</gml:upperCorner>
            </gml:Envelope>
          </ogc:Overlaps>
        </ogc:Filter>
      </csw:Constraint>
  </csw:Query>
</csw:GetRecords>
				</ctl:body>
				<p:XMLValidatingParser.CSW/>
			  </ctl:request>
			</xsl:variable>
            <xsl:choose>
              <xsl:when test="not($response/*)">
                  <ctl:message>FAILURE: Missing or invalid response entity.</ctl:message>
                  <ctl:fail/>
              </xsl:when>
              <xsl:otherwise>
                <xsl:variable name="recordCount" select="count($response//csw:SearchResults/*)" />
                <xsl:if test="$recordCount lt 1">
                  <ctl:message>FAILURE: Expected one or more records in response.</ctl:message>
                  <ctl:fail/>
                </xsl:if>
                <xsl:if test="not($response//csw:SummaryRecord/dc:identifier = 'urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc')">
                  <ctl:message>FAILURE: Missing record (dc:identifier="urn:uuid:9a669547-b69b-469f-a11f-2d875366bbdc").</ctl:message>
                  <ctl:fail/>
                </xsl:if>
              </xsl:otherwise>
            </xsl:choose>
		</ctl:code>
	</ctl:test>
</ctl:package>